services:
  frontend:
    build:
      context: ./frontend
      args:
        VERSION: ${FE_VERSION}
    image: frontend:${FE_VERSION}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    networks:
      - app_network

  backend:
    build: 
      context: ./backend
      args:
        VERSION: ${BE_VERSION}
    image: backend:${BE_VERSION}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - app_network
    environment:
      CORS_ORIGINS: '["http://localhost:${FRONTEND_PORT}"]'
      OLLAMA_HOST: "http://ollama:${OLLAMA_PORT}"
      OLLAMA_MODEL: ${OLLAMA_MODEL}
      CHUNK_SIZE: ${CHUNK_SIZE}
      TOKEN_ENCODING: ${TOKEN_ENCODING}
      PROMPT_FILE: ${PROMPT_FILE}
      HEALTH_CHECK_TIMEOUT: ${HEALTH_CHECK_TIMEOUT}
      OLLAMA_TIMEOUT: ${OLLAMA_TIMEOUT}
      PYTHONUNBUFFERED: 1
    depends_on:
      - ollama

  ollama:
    build: ./ollama
    ports:
      - "${OLLAMA_PORT}:${OLLAMA_PORT}"
    networks:
      - app_network
    volumes:
      - ollama_data:/root/.ollama
    environment:
      OLLAMA_MODEL: ${OLLAMA_MODEL}
    deploy:
      resources:
        limits:
          memory: ${OLLAMA_MEMORY}

networks:
  app_network:
    driver: bridge

volumes:
  ollama_data:
    name: ollama_data
